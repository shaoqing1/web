JS中的数据类型
  -String
  -Number
  -Boolean
  -Null
  -undefined
  以上为基本数据类型
  -Object
  Object为引用数据类型
  
对象属于一种复合的数据类型，在一个对象中可以保存多个不同数据类型的属性

对象的分类：
  1.内建对象
    --由ES标准中定义的对象，再任何的实现中都可以使用
    --如Math String Number Boolean Function Object
  2.宿主对象
    --由JS的运行环境提供的对象，目前来讲主要指浏览器提供的对象
    --比如：BOM DOM
    --console.log()
    --document.wirte()
  3.自定义对象
    --由开发人员自己创建的对象
    
47、对象的基本操作
1.创建对象
  使用new关键子调用的函数，是构造函数constructor
    构造函数是专门用来创建对象的函数
  使用typeof检查一个对象的时候，会返回object
  var obj = new Object()
2.向对象中添加属性
  再对象中保存的值叫做属性
  语法： 对象.属性名 = 属性值
  obj.name = "孙悟空"
3.读取对象中的属性
  语法：对象.属性名
  如果读取对象中没有的属性，不会报错，而是会返回一个undefined
  
4.修改对象的属性值
  语法：对象.属性值 = 新值
5.删除对象的属性
  语法delete 对象.属性名
  
48.对象的属性名和属性值
1.属性名：
    -对象的属性名不强制遵守标识符的规范
      什么乱七八糟的值都可以 
    -但是我们使用的时候还是尽量按照标识符规范去做
    -如果要使用特殊的属性名，不能采用.的方式操作
      需使用另一种格式
        语法：对象["属性名"] = 属性值
        读取的时候也要以以上这种方式
     -使用[]这种形式的方法去操作属性，更加的灵活
      在[]中可以直接传递变量，这样变量值是多少就会读取对应的属性
  var obj = new Object()
  
  obj.name = "孙悟空"
2.属性值
  JS对象的属性值可以是任意的数据类型
  obj.test = "hello"
  obj.test = 123
  obj.test = true
  obj.test = null
  obj.test = undefined
  也可以是一个对象

3.in运算符
  -通过该运算符可以检查一个对象中是否含有指定的属性
    如果有返回true，没有则返回false
  -语法
    “属性名” in 对象
    
  //
  console.log("test2" in obj)
  console.log("test" in obj)
  
49.基本和引用数据类型
  基本数据类型
  String Number Boolean Bull undefined
  引用数据类型
  object
  
  var a = 123
  var b = a
  a++
  console.log("a = " + a)
  console.log("b = " + b)
  会输出a = 124 b = 123
  
  var obj = new Object()
  var obj2 = new Object()
  obj.name = "孙悟空"
  obj2 = obj
  obj.name = "猪八戒"
  console.log(obj.name)
  console.log(obj2.name)
  两个都输出了猪八戒
  
  JS的变量都是存储在栈内存中的，
    基本数据类型的值直接在栈内存中存储
    值与值之间是独立存在，修改一个变量不会影响其他变量
     new表示在堆内存中开辟空间
    对象是保存在堆内存中的，每创建一个新的对象，就会在堆内存中开辟出一个空间
    而变量保存的是堆内存的地址，对象赋值的话会将保存对象的地址赋值，所以两个
    对象会指向同一个变量
    如果两个变量保存的是同一个内存的引用，则修改一个另一个也会受到影响
    
    
    var obj = new Object()
    var obj2 = obj
    obj.name = "孙悟空"
    obj2 = null
    console.log(obj.name)
    console.log(obj2)
    输出孙悟空和null，obj不会产生影响
50、对象字面量
  var obj = new Object()
  //使用对象字面量来创建一个函数
  var obj = {}
  
  //使用对象字面量，可以在创建对象的时候直接指定对象中的属性
  var obj = {name: "猪八戒"}
  
  


  