作用域：
  -作用域指一个变量的作用范围
  -在JS中，一共有两种作用域
    1.全部作用域
      -直接编写在script标签中的JS代码，都在全局作用域
      -全局作用域在页面打开时创建，在页面关闭时销毁
      -在全局作用域中，有一个全局对象window，我们可以直接使用
        它代表我们浏览器的窗口，它由浏览器创建我们可以直接使用
      -在全局作用域中：
        我们创建的变量都会作为window对象的属性保存
        创建的函数都会作为window对象的方法保存
      -全局作用域中的变量是全局变量，
        在页面的任何地方都可以访问的到
    2.函数作用域


变量的声明提前

使用var关键字声明的变量，会在所有的代码执行之前被声明（但是不会赋值）
但是如果声明变量时不适用var关键字，则不会被声明
console.log("a=" + a)
var a = 123 会输出undefined
a = 123 会报错


函数的声明提前
  使用函数声明的形式创建的函数，function fun() {}
     -他会在所有代码执行之前被创建，所以我们可以在函数声明之前调用函数
  使用函数表达式创建的函数，不会被提前创建，所以不可以再声明前调用

fun() //不会报错，并打印正确结果
fun2() //报错

function fun(){
  console.log("我是一个fun函数")
} 

var fun2 = function() {
  console.log("我是fun2函数")
}


函数作用域
  --调用函数时创建函数作用域，函数执行完毕之后、函数作用域销毁
  --每调用一个函数就会创建一个新的函数作用域，他们之间时相互独立的
  --在函数作用域中可以访问到全局的变量
  --在全局作用域中无法访问到函数作用域中的变量
  --函数作用域中操作变量时，他会先在自身作用域中寻找，如果找不到会去上一级去找
    直到全局作用域，如果全局作用域依然没有找到，则会报错
  --在函数中，要访问全局的变量，可以使用window对象
  --在函数作用域中也有声明提前的特性
    使用var关键字声明的变量，会在函数中所有的代码执行之前被声明
  --在函数中不使用var声明的变量，都会成为全局变量
function fun() {
}